{"version":3,"sources":["services/Firebase.js","components/Header.jsx","components/LikeDialog.jsx","components/PostPreview.jsx","components/ProfilePage.jsx","components/CreatePost.jsx","App.jsx","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","provider","GoogleAuthProvider","setCustomParameters","prompt","createNewUser","userAuth","additionalData","a","userRef","doc","uid","get","exists","displayName","email","photoURL","createdAt","Date","set","isSubscribed","console","log","message","signInWithGoogle","signInWithPopup","Header","user","className","to","style","fill","textDecoration","color","onClick","signOut","id","Tooltip","arrow","title","fontSize","aria-label","href","target","rel","DialogTitle","withStyles","theme","root","margin","padding","spacing","closeButton","position","right","top","palette","grey","props","classes","onClose","other","disableTypography","Typography","variant","IconButton","DialogContent","MuiDialogContent","LikeDialog","unsubscribeFromSnapshot","handleClickOpen","setState","open","handleClose","state","likes","postID","this","postRef","onSnapshot","snapshot","postLikes","Object","values","data","Dialog","fullWidth","maxWidth","aria-labelledby","dividers","map","like","key","uuidv1","src","alt","Component","PostPreview","openDialog","refs","dialog","content","author","date","handleLike","currentUser","handleDelete","ref","split","slice","toString","replace","keys","length","ProfilePage","getUser","userID","userData","displayedUser","setPosts","collection","currentUserPosts","docs","filter","post","userPosts","match","params","nextProps","backgroundColor","CreatePost","handleChange","handleSubmit","handleReset","titleField","contentField","onSubmit","e","preventDefault","TextField","label","onChange","type","name","value","minWidth","multiline","Button","trim","disabled","App","unsubscribeFromAuth","initialState","posts","currentPage","event","currentTime","getTime","newPost","alert","delete","handlePageForward","handlePageBackward","handleSubscription","sub","userObj","postSnapshot","postData","updatedUserLikes","onAuthStateChanged","allPosts","Math","ceil","exact","path","textTransform","render","Boolean","window","location","hostname","ReactDOM","zIndex","particlesOptions","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.29aa1b73.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID,\n    measurementId: process.env.REACT_APP_MEASUREMENT_ID\n};\n\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\n// Google auth setup\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({prompt: 'select_account'});\n\n\n// Creates a new user and writes it to the firestore database\nexport const createNewUser = async (userAuth, additionalData) => {\n    if (!userAuth) return;\n\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\n    const snapShot = await userRef.get();\n\n    if (!snapShot.exists) {\n        const { displayName, email, photoURL } = userAuth;\n        const createdAt = new Date();\n\n        try {\n            await userRef.set({\n                displayName,\n                email,\n                createdAt,\n                photoURL,\n                isSubscribed: false,\n                ...additionalData\n            });\n        } catch (err) {\n            console.log('Error creating user.', err.message);\n        }\n    }\n\n    return userRef;\n};\n\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;","import React from 'react';\nimport { auth } from '../services/Firebase';\nimport { signInWithGoogle } from '../services/Firebase';\nimport { Link } from 'react-router-dom';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HomeIcon from '@material-ui/icons/Home';\nimport './Header.css'\n\nconst Header = ({ user }) => (\n    <nav className='flex justify-between bb b--white-10 bg-dark-gray'>\n        <div className='link white-70 hover-white no-underline flex items-center pa3'>\n            <Link to={`${process.env.PUBLIC_URL}/`}>\n                <HomeIcon className='dib home-icon' style={{ fill: 'white' }} />\n            </Link>\n        </div>\n        <div className='flex-grow pa3 flex items-center'>\n            <div className='f6 link dib white dim mr3 mr4-ns pointer'>\n                {\n                    user ?\n                        <Link to={`${process.env.PUBLIC_URL}/`} style={{ textDecoration: 'none', color: 'white' }}>\n                            <div onClick={() => auth.signOut()}>Sign Out</div>\n                        </Link>\n                    :   <div onClick={signInWithGoogle}>Sign In</div>\n                }\n            </div>\n\n            {\n                user ? \n                    <Link to={`${process.env.PUBLIC_URL}/profile/${user ? user.id : ''}`} style={{ textDecoration: 'none', color: 'white' }}>\n                        <div className='f6 dib white bg-animate hover-bg-white hover-black no-underline pv2 ph4 br-pill ba b--white-20 pointer'>Hi, {user.displayName}</div>\n                    </Link>\n                :   <Tooltip arrow title={<span style={{ fontSize: '12px' }}>Create a Google Account</span>} aria-label='signup'>\n                        <a className='f6 dib white bg-animate hover-bg-white hover-black no-underline pv2 ph4 br-pill ba b--white-20 pointer' href='https://accounts.google.com/signup/v2/webcreateaccount?continue=https%3A%2F%2Faccounts.google.com%2FManageAccount&dsh=S470069364%3A1581635333339519&gmb=exp&biz=false&flowName=GlifWebSignIn&flowEntry=SignUp' target='_blank' rel='noopener noreferrer'>\n                            Sign Up\n                        </a>\n                    </Tooltip>\n            }\n\n        </div>\n    </nav>\n);\n\nexport default Header;\n","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport uuidv1 from 'uuid/v1';\nimport { firestore } from '../services/Firebase';\nimport { Link } from 'react-router-dom';\nimport './PostPreview.css';\n\nconst styles = theme => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(2)\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500]\n    }\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n    const { classes, onClose, ...other } = props;\n    return (\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n            <Typography variant='h6'>Likes</Typography>\n            {onClose ? (\n            <IconButton aria-label='close' className={classes.closeButton} onClick={onClose}>\n                <CloseIcon />\n            </IconButton>\n            ) : null}\n        </MuiDialogTitle>\n    );\n});\n\nconst DialogContent = withStyles(theme => ({\n    root: {\n        padding: theme.spacing(2)\n    }\n}))(MuiDialogContent);\n\nclass LikeDialog extends Component {\n    unsubscribeFromSnapshot = null;\n\n    constructor(props) {\n        super(props);\n        this.state = { open: false, likes: [] };\n    }\n\n    componentDidMount() {\n        const { postID } = this.props;\n        const postRef = firestore.doc(`posts/${postID}`);\n        this.unsubscribeFromSnapshot = postRef.onSnapshot(snapshot => {\n            if (snapshot.exists) {\n                const postLikes = Object.values(snapshot.data().likes);\n                this.setState({ likes: postLikes });\n            } else {\n                this.setState({ likes: [] });\n            }\n        });\n    }\n\n    componentWillUnmount() {\n        this.unsubscribeFromSnapshot();\n    }\n\n    handleClickOpen = () => {\n        this.setState({ open: true });\n    }\n\n    handleClose = () => {\n        this.setState({ open: false });\n    }\n\n    render() {\n        const { open, likes } = this.state;\n\n        return (\n            <div>\n                <Dialog fullWidth maxWidth={'sm'} onClose={this.handleClose} aria-labelledby='customized-dialog-title' open={open}>\n                    <DialogTitle id='customized-dialog-title' onClose={this.handleClose} />\n                    <DialogContent dividers>\n                        {\n                            likes.map(like => (\n                                <div key={uuidv1()}>\n                                    <img src={like ? like.photoURL : ''} className='br-100 h2 w2 dib v-mid mr2 mv2' alt='profile pic' />\n                                    <Link onClick={this.handleClose} to={`${process.env.PUBLIC_URL}/profile/${like ? like.id : ''}`} style={{ textDecoration: 'none', color: 'black' }}>\n                                        <span className='fw7 pointer profile-link v-mid'>{like ? like.displayName : ''}</span>\n                                    </Link>\n                                </div>\n                            ))\n                        }\n                    </DialogContent>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default LikeDialog;\n","import React, { Component } from 'react';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport IconButton from '@material-ui/core/IconButton';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link } from 'react-router-dom';\nimport LikeDialog from './LikeDialog';\nimport './PostPreview.css';\n\nclass PostPreview extends Component {\n    openDialog = () => {\n        this.refs.dialog.handleClickOpen();\n    }\n\n    render() {\n        const { id, title, content, author, date, handleLike, currentUser, likes, handleDelete } = this.props;\n\n        return (\n            <article className='pv3 bb b--black-10 ph3 ph0-l'>\n                <LikeDialog postID={id} ref='dialog' />\n                <div className='flex flex-column flex-row-ns'>\n                    <div className='tl w-100'>\n                        <div className='flex justify-between'>\n                            <h1 className='f3 athelas mt0 lh-title'>\n                                {title}\n                            </h1>\n                            <div className='flex'>\n                                {\n                                    currentUser && author ? \n                                        currentUser.id === author.id ?\n                                            <IconButton onClick={() => handleDelete(id)}>\n                                                <DeleteIcon />\n                                            </IconButton>\n                                        : null\n                                    : null\n                                }\n                            </div>\n                        </div>\n                        <p className='f5 f4-l lh-copy athelas'>\n                            {content}\n                        </p>\n                    </div>\n                </div>\n                <p className='tl f6 lh-copy gray mv2'>\n                    By\n                    <Link to={`${process.env.PUBLIC_URL}/profile/${author ? author.id : ''}`} style={{ textDecoration: 'none', color: 'black' }}>\n                        <span className='fw7 pointer profile-link'> {author.displayName}</span>\n                    </Link>\n                </p>\n                <time className='tl f6 db gray'>{date.split(':').slice(0, 2).toString().replace(',', ':')}</time>\n                <div className='tl mt3'>\n                    {\n                        likes[currentUser ? currentUser.id : ''] ?\n                            <FavoriteIcon className={`v-mid pointer ${likes[currentUser ? currentUser.id : ''] ? 'heart' : ''}`} style={{ color: '#ed4956' }} onClick={() => handleLike(false, id)} />\n                        :   <FavoriteBorderIcon className='v-mid pointer' onClick={() => handleLike(true, id)} />\n                    }\n                    • <span onClick={Object.keys(likes).length ? this.openDialog : null} className={`v-mid ${Object.keys(likes).length ? 'fw7 pointer profile-link' : ''}`}>{`${Object.keys(likes).length} Like${Object.keys(likes).length === 1 ? '' : 's'}`}</span>\n                </div>\n            </article>\n        );\n    }\n}\n\nexport default PostPreview;\n","import React, { Component } from 'react';\nimport PostPreview from './PostPreview';\nimport { firestore } from '../services/Firebase';\n\nclass ProfilePage extends Component {\n    unsubscribeFromSnapshot = null;\n\n    constructor(props) {\n        super(props);\n        this.state = { displayedUser: null, userPosts: [] };\n    }\n\n    getUser = async userID => {\n        const userRef = await firestore.doc(`users/${userID}`).get();\n        const userData = userRef.data();\n        this.setState({ displayedUser: userData });\n    }\n\n    setPosts = userID => {\n        const postRef = firestore.collection('posts');\n        this.unsubscribeFromSnapshot = postRef.onSnapshot(snapshot => {\n            const allPosts = snapshot.docs.map(doc => doc.data());\n            const currentUserPosts = allPosts.filter(post => post.author.id === userID);\n            this.setState({ userPosts: currentUserPosts });\n        });\n    }\n\n    componentDidMount() {\n        const { match } = this.props;\n        this.getUser(match.params.userID);\n        this.setPosts(match.params.userID);\n    }\n\n    componentWillUnmount() {\n        this.unsubscribeFromSnapshot();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (this.props.match.params.userID !== nextProps.match.params.userID) {\n            const { match } = nextProps;\n            this.getUser(match.params.userID);\n            this.setPosts(match.params.userID);\n        }\n    }\n\n    render() {\n        const { displayedUser, userPosts } = this.state;\n        const { currentUser, handleLike, handleDelete } = this.props;\n\n        return (\n            <div>\n                <article className='mw6 center bg-white br3 pa3 pa4-ns mv3 ba b--black-10' style={{ backgroundColor: '#f8faeb' }}>\n                    <div className='tc'>\n                        <img src={displayedUser ? displayedUser.photoURL : ''} className='br-100 h4 w4 dib ba b--black-05 pa2' alt='profile pic' />\n                        <h1 className='f3 mb2'>\n                            {displayedUser ? displayedUser.displayName : ''}\n                        </h1>\n                        <h2 className='f5 fw4 gray mt0'>\n                            Contact:\n                            <a style={{ textDecoration: 'none', color: '#777' }} href={`mailto:${displayedUser ? displayedUser.email : ''}`} target='_blank' rel='noopener noreferrer'>\n                                <span className='fw7'> {displayedUser ? displayedUser.email : ''}</span>\n                            </a>\n                        </h2>\n                    </div>\n                </article>\n                <section className='mw7 center'>\n                    <h1 className='athelas ph3 ph0-l'>{`${displayedUser ? displayedUser.displayName : ''}'s Posts`}</h1>\n                    {\n                        userPosts.length ?\n                            userPosts.map(post => (<PostPreview {...post} currentUser={currentUser} handleLike={handleLike} handleDelete={handleDelete} />))\n                        :   <h3 className='fw4'>No posts yet!</h3>\n                    }\n                </section>\n            </div>\n        );\n    }\n}\n\nexport default ProfilePage;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { Link } from 'react-router-dom';\n\n\nconst CreatePost = ({ handleChange, handleSubmit, handleReset, titleField, contentField, currentUser }) => (\n    <div>\n        <h1>Create a New Post</h1>\n        <form onSubmit={e => { e.preventDefault() }}>\n            <div className='db mt4'>\n                <TextField\n                    id=\"title\"\n                    label=\"Enter a Title\"\n                    onChange={handleChange}\n                    type=\"title\"\n                    name=\"titleField\"\n                    value={titleField}\n                    style={{\n                        margin: 10,\n                        minWidth: '50%'\n                    }}\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                />\n            </div>\n            <div className='db'>\n                <TextField\n                    id=\"content\"\n                    label=\"What's on your mind?\"\n                    onChange={handleChange}\n                    type=\"content\"\n                    name=\"contentField\"\n                    value={contentField}\n                    style={{\n                        margin: 10,\n                        minWidth: '50%'\n                    }}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    multiline\n                />\n            </div>\n\n            <div className='pa3 dib'>\n                <Link to={`${process.env.PUBLIC_URL}/`} style={{ textDecoration: 'none' }}>\n                    <Button variant='contained' type='reset' onClick={handleReset}>\n                        Cancel\n                    </Button>\n                </Link>\n            </div>\n            <div className='pa3 dib'>\n                <Button variant='contained' type='reset' onClick={handleReset} color='secondary'>\n                    Clear\n                </Button>\n            </div>\n            <div className='pa3 dib'>\n                {\n                    currentUser ?\n                        <Link to={`${process.env.PUBLIC_URL}/${titleField.trim() && contentField.trim() ? '' : 'newpost'}`} style={{ textDecoration: 'none' }}>\n                            <Button variant='contained' type='submit' onClick={handleSubmit} color='primary'>\n                                Post\n                            </Button>\n                        </Link>\n                    :   <Button variant='contained' type='submit' onClick={handleSubmit} color='primary' disabled>\n                        Post\n                        </Button>\n                }\n            </div>\n        </form>\n    </div>\n);\n\nexport default CreatePost;","import React, { Component } from 'react';\nimport './App.css';\n\nimport Header from './components/Header';\nimport ProfilePage from './components/ProfilePage';\nimport CreatePost from './components/CreatePost';\nimport PostPreview from './components/PostPreview';\n\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport AddIcon from '@material-ui/icons/Add';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport NotificationsOffIcon from '@material-ui/icons/NotificationsOff';\nimport Button from '@material-ui/core/Button';\n\nimport { auth, createNewUser } from './services/Firebase';\nimport { firestore } from './services/Firebase';\nimport uuidv1 from 'uuid/v1';\nimport { Switch, Route, Link } from 'react-router-dom';\n\nclass App extends Component {\n\n    unsubscribeFromAuth = null;\n    unsubscribeFromSnapshot = null;\n\n    initialState = {\n        currentUser: null,\n        titleField: '',\n        contentField: '',\n        posts: [],\n        currentPage: 1\n    }\n\n\n\n    constructor(props) {\n        super(props);\n        this.state = this.initialState;\n    }\n\n    // Handles the state of the textbox for the createPost page\n    handleChange = event => {\n        const { name, value } = event.target;\n        this.setState({ [name]: value })\n    };\n\n    // Handles post submission\n    handleSubmit = () => {\n        const { titleField, contentField, currentUser } = this.state;\n\n        if (!titleField.trim() || !contentField.trim()) {\n            alert('Title or content cannot be empty!');\n        } else {\n            \n            const currentTime = new Date();\n            const postID = 10000000000000 - currentTime.getTime();  // unique ID based on the timestamp of the post\n            const newPost = {\n                id: postID,\n                key: uuidv1(),\n                title: titleField,\n                content: contentField,\n                author: currentUser,\n                date: currentTime.toString(),\n                likes: {}\n            };\n    \n            this.handleReset();\n\n            firestore.doc(`posts/${postID}`).set(newPost);\n        }\n    }\n\n    // Deletes a post\n    handleDelete = postID => {\n        firestore.doc(`posts/${postID}`).delete();\n    }\n\n    // Resets the textbox for createPost page\n    handleReset = () => {\n        this.setState({\n            titleField: '',\n            contentField: ''\n        });\n    }\n\n    // Goes to the next page of posts\n    handlePageForward = () => {\n        this.setState(state => ({\n            currentPage: state.currentPage + 1\n        }));\n    }\n\n    // Goes to the previous page of posts\n    handlePageBackward = () => {\n        this.setState(state => ({\n            currentPage: state.currentPage - 1\n        }));\n    }\n\n    // Handles the current user's subscription to the blog\n    handleSubscription = async sub => {\n        const userRef = firestore.doc(`users/${this.state.currentUser.id}`);\n        const userObj = await userRef.get();\n        const userData = userObj.data();\n\n        try {\n            await userRef.set({ ...userData, isSubscribed: sub });\n        } catch (err) {\n            console.log('Error handling subscription.', err.message);\n        }\n    }\n\n    // Handles the action when a user likes a post\n    handleLike = async (like, postID) => {\n        const { currentUser } = this.state;\n\n        if (!currentUser) {\n            alert('Please sign in to like this post.');\n            return;\n        }\n\n        const postRef = firestore.doc(`posts/${postID}`);\n        const postSnapshot = await postRef.get();\n        const postData = postSnapshot.data();\n\n        try {\n            if (like) {\n                const updatedUserLikes = { ...postData.likes, [currentUser.id]: currentUser };\n                await postRef.set({ ...postData, likes: updatedUserLikes });\n            } else {\n                delete postData.likes[currentUser.id];\n                await postRef.set({ ...postData, likes: postData.likes });\n            }\n        } catch (err) {\n            console.log('Error handling like.', err.message);\n        }\n    }\n\n\n    componentDidMount() {\n        this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {  // Listener to detect when a user has logged in\n            if (userAuth) {\n                const userRef = await createNewUser(userAuth);\n\n                userRef.onSnapshot(snapshot => {\n                    this.setState({ currentUser: {\n                        id: snapshot.id,\n                        ...snapshot.data()\n                    }});\n                })\n            } else {\n                this.setState({ currentUser: null });\n            }\n        });\n\n        const postRef = firestore.collection('posts');\n        this.unsubscribeFromSnapshot = postRef.onSnapshot(snapshot => { // Listener to detect when a new post is made\n            const allPosts = snapshot.docs.map(doc => doc.data());\n            this.setState({ posts: allPosts });\n\n            if (this.state.currentPage > 1 && this.state.currentPage > Math.ceil(allPosts.length / 5)) { // Prevents the current page from being out of bounds, like when posts are deleted but you are still on the last page\n                this.setState({ currentPage: Math.ceil(allPosts.length / 5) });\n            }\n        });\n    }\n\n    componentWillUnmount() {\n        this.unsubscribeFromAuth();\n        this.unsubscribeFromSnapshot();\n    }\n\n\n    render() {\n        const { currentUser, posts, currentPage } = this.state;\n\n        return (\n            <div className='App'>\n                <Header user={currentUser} />\n                <Switch> \n                    <Route exact path={`${process.env.PUBLIC_URL}/`}>\n                        <section className='mw7 center'>\n                            <h1 className='athelas ph3 ph0-l'>News Feed</h1>\n                            \n                            {   // Action buttons (new post, subscribe)\n                                currentUser ?\n                                    <div>\n                                        <div className='mh3 dib'>\n                                            <Link to={`${process.env.PUBLIC_URL}/newpost`} style={{ textDecoration: 'none' }}>\n                                                <Button variant='contained' style={{ backgroundColor: '#1777f2', color: 'white' }}><AddIcon /><span>New Post</span></Button>\n                                            </Link>\n                                        </div>\n                                        {\n                                            currentUser.isSubscribed ? \n                                                <div className='mh3 dib'>\n                                                    <Button variant='contained' onClick={() => this.handleSubscription(false)}><NotificationsOffIcon /><span>Unsubscribe</span></Button>\n                                                </div>\n                                            :   <div className='mh3 dib'>\n                                                    <Button variant='contained' onClick={() => this.handleSubscription(true)} style={{ backgroundColor: '#f90300', color: 'white' }}><NotificationsActiveIcon /><span>Subscribe</span></Button>\n                                                </div>\n                                        }\n                                    </div>\n                                :   null\n                            }\n\n                            {   // Main post components, navigation footer (page navigation, view all posts button)\n                                posts.length ?\n                                    <div>\n                                        {posts.slice((currentPage - 1) * 5, currentPage * 5).map(post => (<PostPreview {...post} currentUser={currentUser} handleLike={this.handleLike} handleDelete={this.handleDelete} />))}\n                                        <div className='ma4'>\n                                            <Button onClick={this.handlePageBackward} variant='contained' disabled={currentPage === 1}><ArrowBackIcon /></Button>\n                                                <span className='mh3'>{`Page ${currentPage} of ${Math.ceil(posts.length / 5)}`}</span>\n                                            <Button onClick={this.handlePageForward} variant='contained' disabled={currentPage === Math.ceil(posts.length / 5)}><ArrowForwardIcon /></Button>\n                                        </div>\n                                        <div className='ma3'>\n                                            <Link to={`${process.env.PUBLIC_URL}/all`} style={{ textDecoration: 'none' }}>\n                                                <Button style={{ textTransform: 'none' }} variant='outlined'>View All Posts</Button>\n                                            </Link>\n                                        </div>\n                                    </div>\n                                :   <h3 className='fw4'>No posts yet!</h3>\n                            }\n                        </section>\n                    </Route>\n\n                    <Route path={`${process.env.PUBLIC_URL}/newpost`}>\n                        <CreatePost handleChange={this.handleChange} handleSubmit={this.handleSubmit} handleReset={this.handleReset} {...this.state} />\n                    </Route>\n\n                    <Route path={`${process.env.PUBLIC_URL}/all`}>\n                        <section className='mw7 center'>\n                            <h1 className='athelas ph3 ph0-l'>All Posts</h1>\n                            {   // Main posts page\n                                posts.length ?\n                                    <div>\n                                        {posts.map(post => (<PostPreview {...post} currentUser={currentUser} handleLike={this.handleLike} handleDelete={this.handleDelete} />))}\n                                        <div className='ma3'>\n                                            <Link to={`${process.env.PUBLIC_URL}/`} style={{ textDecoration: 'none' }}>\n                                                <Button style={{ textTransform: 'none' }} variant='outlined'>Back to News Feed</Button>\n                                            </Link>\n                                        </div>\n                                    </div>\n                                :   <h3 className='fw4'>No posts yet!</h3>\n                            }\n                        </section>\n                    </Route>\n\n                    {/* Route path to a user's profile */}\n                    <Route path={`${process.env.PUBLIC_URL}/profile/:userID`} render={props => <ProfilePage {...props} currentUser={currentUser} handleLike={this.handleLike} handleDelete={this.handleDelete} />} />\n                </Switch>\n                <img src='https://img.pngio.com/university-texas-longhorn-clipart-free-85063-png-images-pngio-university-of-texas-longhorns-png-320_161.png' className='h2 w3 ma2' alt='longhorn' />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter } from 'react-router-dom';\nimport Particles from 'react-particles-js';\nimport particlesOptions from './particlesOptions.json';\nimport 'tachyons';\n\nReactDOM.render(\n    <BrowserRouter>\n        <Particles style={{ position: 'fixed', zIndex: -1 }} className='particles' params={particlesOptions} />\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}