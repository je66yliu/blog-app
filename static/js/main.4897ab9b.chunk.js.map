{"version":3,"sources":["services/Firebase.js","components/Header.jsx","components/PostPreview.jsx","components/ProfilePage.jsx","components/CreatePost.jsx","App.jsx","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","provider","GoogleAuthProvider","setCustomParameters","prompt","createNewUser","userAuth","additionalData","a","userRef","doc","uid","get","exists","displayName","email","photoURL","createdAt","Date","set","isSubscribed","console","log","message","signInWithGoogle","signInWithPopup","Header","user","className","to","data-icon","viewBox","style","fill","d","textDecoration","color","onClick","signOut","id","Tooltip","arrow","title","fontSize","aria-label","href","target","rel","PostPreview","content","author","date","handleLike","currentUser","likes","Object","keys","length","ProfilePage","props","getUser","match","params","userID","userData","data","setState","displayedUser","state","userPosts","this","postRef","collection","unsubscribeFromSnapshot","onSnapshot","snapshot","currentUserPosts","docs","map","filter","post","src","alt","Component","CreatePost","handleChange","handleSubmit","handleReset","titleField","contentField","onSubmit","e","preventDefault","TextField","label","onChange","type","name","value","margin","minWidth","variant","multiline","Button","trim","disabled","App","unsubscribeFromAuth","initialState","posts","currentPage","event","postID","newPost","key","uuidv1","toString","split","slice","replace","alert","handlePageForward","handlePageBackward","handleSubscription","sub","userObj","like","postSnapshot","postData","updatedUserLikes","onAuthStateChanged","allPosts","Math","ceil","exact","path","backgroundColor","textTransform","render","Boolean","window","location","hostname","ReactDOM","position","zIndex","particlesOptions","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"uQAgBAA,IAASC,cAZc,CACnBC,OAAQC,0CACRC,WAAYD,iCACZE,YAAaF,wCACbG,UAAWH,iBACXI,cAAeJ,6BACfK,kBAAmBL,eACnBM,MAAON,4CACPO,cAAeP,iBAMZ,IAAMQ,EAAOX,IAASW,OAChBC,EAAYZ,IAASY,YAE5BC,EAAW,IAAIb,IAASW,KAAKG,mBACnCD,EAASE,oBAAoB,CAACC,OAAQ,mBAG/B,IAAMC,EAAa,uCAAG,WAAOC,EAAUC,GAAjB,uBAAAC,EAAA,yDACpBF,EADoB,wDAGnBG,EAAUT,EAAUU,IAAV,gBAAuBJ,EAASK,MAHvB,SAIFF,EAAQG,MAJN,iBAMXC,OANW,wBAObC,EAAiCR,EAAjCQ,YAAaC,EAAoBT,EAApBS,MAAOC,EAAaV,EAAbU,SACtBC,EAAY,IAAIC,KARD,mBAWXT,EAAQU,IAAR,aACFL,cACAC,QACAE,YACAD,WACAI,cAAc,GACXb,IAjBU,0DAoBjBc,QAAQC,IAAI,uBAAwB,KAAIC,SApBvB,iCAwBlBd,GAxBkB,0DAAH,wDA2Bbe,EAAmB,kBAAMzB,EAAK0B,gBAAgBxB,I,GAE5Cb,EAAf,E,gBCVesC,G,MArCA,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACX,yBAAKC,UAAU,oDACX,yBAAKA,UAAU,gEACX,kBAAC,IAAD,CAAMC,GAAE,UAAKtC,YAAL,MACJ,yBAAKqC,UAAU,sBAAsBE,YAAU,OAAOC,QAAQ,YAAYC,MAAO,CAAEC,KAAM,UACrF,yDACA,0BAAMC,EAAE,gQAIpB,yBAAKN,UAAU,mCACX,yBAAKA,UAAU,4CAEPD,EACI,kBAAC,IAAD,CAAME,GAAE,UAAKtC,YAAL,KAAgCyC,MAAO,CAAEG,eAAgB,OAAQC,MAAO,UAC5E,yBAAKC,QAAS,kBAAMtC,EAAKuC,YAAzB,aAEJ,yBAAKD,QAASb,GAAd,YAKRG,EACI,kBAAC,IAAD,CAAME,GAAE,UAAKtC,YAAL,oBAAuCoC,EAAOA,EAAKY,GAAK,IAAMP,MAAO,CAAEG,eAAgB,OAAQC,MAAO,UAC1G,yBAAKR,UAAU,0GAAf,OAA6HD,EAAKb,cAEtI,kBAAC0B,EAAA,EAAD,CAASC,OAAK,EAACC,MAAO,0BAAMV,MAAO,CAAEW,SAAU,SAAzB,2BAAmEC,aAAW,UAChG,uBAAGhB,UAAU,yGAAyGiB,KAAK,gNAAgNC,OAAO,SAASC,IAAI,uBAA/V,gB,kCCETC,G,MA9BK,SAAC,GAAD,IAAGT,EAAH,EAAGA,GAAIG,EAAP,EAAOA,MAAOO,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,KAAMC,EAArC,EAAqCA,WAAYC,EAAjD,EAAiDA,YAAaC,EAA9D,EAA8DA,MAA9D,OAChB,6BAAS1B,UAAU,gCACf,yBAAKA,UAAU,gCACX,yBAAKA,UAAU,MACX,wBAAIA,UAAU,2BACTc,GAEL,uBAAGd,UAAU,2BACRqB,KAIb,uBAAGrB,UAAU,0BAAb,KAEI,kBAAC,IAAD,CAAMC,GAAE,UAAKtC,YAAL,oBAAuC2D,EAASA,EAAOX,GAAK,IAAMP,MAAO,CAAEG,eAAgB,OAAQC,MAAO,UAC9G,0BAAMR,UAAU,eAAhB,IAAgCsB,EAAOpC,eAG/C,0BAAMc,UAAU,iBAAiBuB,GACjC,yBAAKvB,UAAU,UAEP0B,EAAMD,EAAcA,EAAYd,GAAK,IACjC,kBAAC,IAAD,CAAcX,UAAS,wBAAmB0B,EAAMD,EAAcA,EAAYd,GAAK,IAAM,QAAU,IAAMP,MAAO,CAAEI,MAAO,WAAaC,QAAS,kBAAMe,GAAW,EAAOb,MACnK,kBAAC,IAAD,CAAoBX,UAAU,gBAAgBS,QAAS,kBAAMe,GAAW,EAAMb,MAEtF,0BAAMX,UAAU,SAAhB,iBAA8B2B,OAAOC,KAAKF,GAAOG,OAAjD,gBAA6F,IAA9BF,OAAOC,KAAKF,GAAOG,OAAe,GAAK,UCmCnGC,E,YA7DX,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAIVC,QALmB,sBAKT,gCAAApD,EAAA,6DACEqD,EAAU,EAAKF,MAAfE,MADF,SAEgB7D,EAAUU,IAAV,gBAAuBmD,EAAMC,OAAOC,SAAUnD,MAF9D,OAEAH,EAFA,OAGAuD,EAAWvD,EAAQwD,OACzB,EAAKC,SAAS,CAAEC,cAAeH,IAJzB,2CAHN,EAAKI,MAAQ,CAAED,cAAe,KAAME,UAAW,IAFhC,E,iFAYE,IAAD,OAChBC,KAAKV,UADW,IAGRC,EAAUS,KAAKX,MAAfE,MACFU,EAAUvE,EAAUwE,WAAW,SACrCF,KAAKG,wBAA0BF,EAAQG,YAAW,SAAAC,GAC9C,IACMC,EADWD,EAASE,KAAKC,KAAI,SAAApE,GAAG,OAAIA,EAAIuD,UACZc,QAAO,SAAAC,GAAI,OAAIA,EAAK9B,OAAOX,KAAOsB,EAAMC,OAAOC,UACjF,EAAKG,SAAS,CAAEG,UAAWO,S,6CAK/BN,KAAKG,4B,+BAGC,IAAD,EACgCH,KAAKF,MAAlCD,EADH,EACGA,cAAeE,EADlB,EACkBA,UADlB,EAE+BC,KAAKX,MAAjCN,EAFH,EAEGA,YAAaD,EAFhB,EAEgBA,WAErB,OACI,6BACI,6BAASxB,UAAU,yDACf,yBAAKA,UAAU,MACX,yBAAKqD,IAAKd,EAAgBA,EAAcnD,SAAW,GAAIY,UAAU,sCAAsCsD,IAAI,gBAC3G,wBAAItD,UAAU,UACTuC,EAAgBA,EAAcrD,YAAc,IAEjD,wBAAIc,UAAU,mBAAd,WAEI,uBAAGI,MAAO,CAAEG,eAAgB,OAAQC,MAAO,QAAUS,KAAI,iBAAYsB,EAAgBA,EAAcpD,MAAQ,IAAM+B,OAAO,SAASC,IAAI,uBACjI,0BAAMnB,UAAU,OAAhB,IAAwBuC,EAAgBA,EAAcpD,MAAQ,QAK9E,6BAASa,UAAU,cACf,wBAAIA,UAAU,qBAAd,UAAsCuC,EAAgBA,EAAcrD,YAAc,GAAlF,aAEIuD,EAAUZ,OACNY,EAAUS,KAAI,SAAAE,GAAI,OAAK,kBAAC,EAAD,iBAAiBA,EAAjB,CAAuB3B,YAAaA,EAAaD,WAAYA,QACpF,wBAAIxB,UAAU,OAAd,uB,GAtDFuD,a,kBCqEXC,EAnEI,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,aAAcC,EAA/B,EAA+BA,YAAaC,EAA5C,EAA4CA,WAAYC,EAAxD,EAAwDA,aAAcpC,EAAtE,EAAsEA,YAAtE,OACf,6BACI,iDACA,0BAAMqC,SAAU,SAAAC,GAAOA,EAAEC,mBACrB,yBAAKhE,UAAU,UACX,kBAACiE,EAAA,EAAD,CACItD,GAAG,QACHuD,MAAM,gBACNC,SAAUV,EACVW,KAAK,QACLC,KAAK,aACLC,MAAOV,EACPxD,MAAO,CACHmE,OAAQ,GACRC,SAAU,OAEdD,OAAO,QACPE,QAAQ,cAGhB,yBAAKzE,UAAU,MACX,kBAACiE,EAAA,EAAD,CACItD,GAAG,UACHuD,MAAM,uBACNC,SAAUV,EACVW,KAAK,UACLC,KAAK,eACLC,MAAOT,EACPzD,MAAO,CACHmE,OAAQ,GACRC,SAAU,OAEdD,OAAO,SACPE,QAAQ,WACRC,WAAS,KAIjB,yBAAK1E,UAAU,WACX,kBAAC,IAAD,CAAMC,GAAE,UAAKtC,YAAL,KAAgCyC,MAAO,CAAEG,eAAgB,SAC7D,kBAACoE,EAAA,EAAD,CAAQF,QAAQ,YAAYL,KAAK,QAAQ3D,QAASkD,GAAlD,YAKR,yBAAK3D,UAAU,WACX,kBAAC2E,EAAA,EAAD,CAAQF,QAAQ,YAAYL,KAAK,QAAQ3D,QAASkD,EAAanD,MAAM,aAArE,UAIJ,yBAAKR,UAAU,WAEPyB,EACI,kBAAC,IAAD,CAAMxB,GAAE,UAAKtC,YAAL,YAA+BiG,EAAWgB,QAAUf,EAAae,OAAS,GAAK,WAAaxE,MAAO,CAAEG,eAAgB,SACzH,kBAACoE,EAAA,EAAD,CAAQF,QAAQ,YAAYL,KAAK,SAAS3D,QAASiD,EAAclD,MAAM,WAAvE,SAIJ,kBAACmE,EAAA,EAAD,CAAQF,QAAQ,YAAYL,KAAK,SAAS3D,QAASiD,EAAclD,MAAM,UAAUqE,UAAQ,GAAzF,Y,8GCgLTC,E,YA7MX,WAAY/C,GAAQ,IAAD,8BACf,4CAAMA,KAdVgD,oBAAsB,KAaH,EAZnBlC,wBAA0B,KAYP,EAVnBmC,aAAe,CACXvD,YAAa,KACbmC,WAAY,GACZC,aAAc,GACdoB,MAAO,GACPC,YAAa,GAKE,EAKnBzB,aAAe,SAAA0B,GAAU,IAAD,EACIA,EAAMjE,OAAtBmD,EADY,EACZA,KAAMC,EADM,EACNA,MACd,EAAKhC,SAAL,eAAiB+B,EAAOC,KAPT,EAUnBZ,aAAe,WAAO,IAAD,EACwC,EAAKlB,MAAtDoB,EADS,EACTA,WAAYC,EADH,EACGA,aAAcpC,EADjB,EACiBA,YAAawD,EAD9B,EAC8BA,MAE/C,GAAKrB,EAAWgB,QAAWf,EAAae,OAEjC,CAEH,IAAMQ,EAAS,UAAYH,EAAMpD,OAC3BwD,EAAU,CACZ1E,GAAIyE,EACJE,IAAKC,MACLzE,MAAO8C,EACPvC,QAASwC,EACTvC,OAAQG,EACRF,MAAM,IAAIjC,MAAOkG,WAAWC,MAAM,KAAKC,MAAM,EAAG,GAAGF,WAAWG,QAAQ,IAAK,KAC3EjE,MAAO,IAGX,EAAKiC,cAELvF,EAAUU,IAAV,gBAAuBsG,IAAU7F,IAAI8F,QAhBrCO,MAAM,sCAdK,EAkCnBjC,YAAc,WACV,EAAKrB,SAAS,CACVsB,WAAY,GACZC,aAAc,MArCH,EAyCnBgC,kBAAoB,WAChB,EAAKvD,UAAS,SAAAE,GAAK,MAAK,CACpB0C,YAAa1C,EAAM0C,YAAc,OA3CtB,EA+CnBY,mBAAqB,WACjB,EAAKxD,UAAS,SAAAE,GAAK,MAAK,CACpB0C,YAAa1C,EAAM0C,YAAc,OAjDtB,EAqDnBa,mBArDmB,uCAqDE,WAAMC,GAAN,mBAAApH,EAAA,6DACXC,EAAUT,EAAUU,IAAV,gBAAuB,EAAK0D,MAAMf,YAAYd,KAD7C,SAEK9B,EAAQG,MAFb,cAEXiH,EAFW,OAGX7D,EAAW6D,EAAQ5D,OAHR,kBAMPxD,EAAQU,IAAR,eAAiB6C,EAAjB,CAA2B5C,aAAcwG,KANlC,yDAQbvG,QAAQC,IAAI,+BAAgC,KAAIC,SARnC,0DArDF,wDAiEnB6B,WAjEmB,uCAiEN,WAAO0E,EAAMd,GAAb,uBAAAxG,EAAA,yDACD6C,EAAgB,EAAKe,MAArBf,YADC,uBAILmE,MAAM,qCAJD,iCAQHjD,EAAUvE,EAAUU,IAAV,gBAAuBsG,IAR9B,SASkBzC,EAAQ3D,MAT1B,UASHmH,EATG,OAUHC,EAAWD,EAAa9D,OAVrB,UAaD6D,EAbC,wBAcKG,EAdL,eAc6BD,EAAS1E,MAdtC,eAc8CD,EAAYd,GAAKuF,IAd/D,UAeKvD,EAAQpD,IAAR,eAAiB6G,EAAjB,CAA2B1E,MAAO2E,KAfvC,8CAiBMD,EAAS1E,MAAMD,EAAYd,IAjBjC,UAkBKgC,EAAQpD,IAAR,eAAiB6G,EAAjB,CAA2B1E,MAAO0E,EAAS1E,SAlBhD,0DAqBLjC,QAAQC,IAAI,uBAAwB,KAAIC,SArBnC,0DAjEM,wDAEf,EAAK6C,MAAQ,EAAKwC,aAFH,E,iFA2FE,IAAD,OAChBtC,KAAKqC,oBAAsB5G,EAAKmI,mBAAL,+BAAA1H,EAAA,MAAwB,WAAMF,GAAN,SAAAE,EAAA,0DAC3CF,EAD2C,gCAErBD,EAAcC,GAFO,cAInCoE,YAAW,SAAAC,GACf,EAAKT,SAAS,CAAEb,YAAY,aACxBd,GAAIoC,EAASpC,IACVoC,EAASV,aAPuB,sBAW3C,EAAKC,SAAS,CAAEb,YAAa,OAXc,2CAAxB,uDAe3B,IAAMkB,EAAUvE,EAAUwE,WAAW,SACrCF,KAAKG,wBAA0BF,EAAQG,YAAW,SAAAC,GAC9C,IAAMwD,EAAWxD,EAASE,KAAKC,KAAI,SAAApE,GAAG,OAAIA,EAAIuD,UAC9C,EAAKC,SAAS,CAAE2C,MAAOsB,IAEnB,EAAK/D,MAAM0C,YAAc,GAAK,EAAK1C,MAAM0C,YAAcsB,KAAKC,KAAKF,EAAS1E,OAAS,IACnF,EAAKS,SAAS,CAAE4C,YAAasB,KAAKC,KAAKF,EAAS1E,OAAS,U,6CAMjEa,KAAKqC,sBACLrC,KAAKG,4B,+BAIC,IAAD,SACuCH,KAAKF,MAAzCf,EADH,EACGA,YAAawD,EADhB,EACgBA,MAAOC,EADvB,EACuBA,YAE5B,OACI,yBAAKlF,UAAU,OACX,kBAAC,EAAD,CAAQD,KAAM0B,IACd,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOiF,OAAK,EAACC,KAAI,UAAKhJ,YAAL,MACb,6BAASqC,UAAU,cACf,wBAAIA,UAAU,qBAAd,aAGIyB,EACI,6BACI,yBAAKzB,UAAU,WACX,kBAAC,IAAD,CAAMC,GAAE,UAAKtC,YAAL,YAAuCyC,MAAO,CAAEG,eAAgB,SACpE,kBAACoE,EAAA,EAAD,CAAQF,QAAQ,YAAYrE,MAAO,CAAEwG,gBAAiB,UAAWpG,MAAO,UAAW,kBAAC,IAAD,MAAW,6CAIlGiB,EAAYjC,aACR,yBAAKQ,UAAU,WACX,kBAAC2E,EAAA,EAAD,CAAQF,QAAQ,YAAYhE,QAAS,kBAAM,EAAKsF,oBAAmB,KAAQ,kBAAC,IAAD,MAAwB,+CAEvG,yBAAK/F,UAAU,WACX,kBAAC2E,EAAA,EAAD,CAAQF,QAAQ,YAAYhE,QAAS,kBAAM,EAAKsF,oBAAmB,IAAO3F,MAAO,CAAEwG,gBAAiB,UAAWpG,MAAO,UAAW,kBAAC,IAAD,MAA2B,8CAI5K,KAIJyE,EAAMpD,OACF,6BACKoD,EAAMS,MAA0B,GAAnBR,EAAc,GAAsB,EAAdA,GAAiBhC,KAAI,SAAAE,GAAI,OAAK,kBAAC,EAAD,iBAAiBA,EAAjB,CAAuB3B,YAAaA,EAAaD,WAAY,EAAKA,iBACpI,yBAAKxB,UAAU,OACX,kBAAC2E,EAAA,EAAD,CAAQlE,QAASiC,KAAKoD,mBAAoBrB,QAAQ,YAAYI,SAA0B,IAAhBK,GAAmB,kBAAC,IAAD,OACvF,0BAAMlF,UAAU,OAAhB,eAA+BkF,EAA/B,eAAiDsB,KAAKC,KAAKxB,EAAMpD,OAAS,KAC9E,kBAAC8C,EAAA,EAAD,CAAQlE,QAASiC,KAAKmD,kBAAmBpB,QAAQ,YAAYI,SAAUK,IAAgBsB,KAAKC,KAAKxB,EAAMpD,OAAS,IAAI,kBAAC,IAAD,QAExH,yBAAK7B,UAAU,OACX,kBAAC,IAAD,CAAMC,GAAE,UAAKtC,YAAL,QAAmCyC,MAAO,CAAEG,eAAgB,SAChE,kBAACoE,EAAA,EAAD,CAAQvE,MAAO,CAAEyG,cAAe,QAAUpC,QAAQ,YAAlD,qBAIZ,wBAAIzE,UAAU,OAAd,mBAKhB,kBAAC,IAAD,CAAO2G,KAAI,UAAKhJ,YAAL,aACP,kBAAC,EAAD,eAAY8F,aAAcf,KAAKe,aAAcC,aAAchB,KAAKgB,aAAcC,YAAajB,KAAKiB,aAAiBjB,KAAKF,SAG1H,kBAAC,IAAD,CAAOmE,KAAI,UAAKhJ,YAAL,SACP,6BAASqC,UAAU,cACf,wBAAIA,UAAU,qBAAd,aAEIiF,EAAMpD,OACF,6BACKoD,EAAM/B,KAAI,SAAAE,GAAI,OAAK,kBAAC,EAAD,iBAAiBA,EAAjB,CAAuB3B,YAAaA,EAAaD,WAAY,EAAKA,iBACtF,yBAAKxB,UAAU,OACX,kBAAC,IAAD,CAAMC,GAAE,UAAKtC,YAAL,KAAgCyC,MAAO,CAAEG,eAAgB,SAC7D,kBAACoE,EAAA,EAAD,CAAQvE,MAAO,CAAEyG,cAAe,QAAUpC,QAAQ,YAAlD,wBAIZ,wBAAIzE,UAAU,OAAd,mBAKhB,kBAAC,IAAD,CAAO2G,KAAI,UAAKhJ,YAAL,oBAA+CmJ,OAAQ,SAAA/E,GAAK,OAAI,kBAAC,EAAD,iBAAiBA,EAAjB,CAAwBN,YAAaA,EAAaD,WAAY,EAAKA,uB,GArNhJ+B,aCREwD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASjF,MACvB,2D,oCCPNkF,IAASL,OACL,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAW1G,MAAO,CAAEgH,SAAU,QAASC,QAAS,GAAKrH,UAAU,YAAYkC,OAAQoF,IACnF,kBAAC,EAAD,OAEJC,SAASC,eAAe,SDmHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.4897ab9b.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID,\n    measurementId: process.env.REACT_APP_MEASUREMENT_ID\n};\n\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({prompt: 'select_account'});\n\n\nexport const createNewUser = async (userAuth, additionalData) => {\n    if (!userAuth) return;\n\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\n    const snapShot = await userRef.get();\n\n    if (!snapShot.exists) {\n        const { displayName, email, photoURL } = userAuth;\n        const createdAt = new Date();\n\n        try {\n            await userRef.set({\n                displayName,\n                email,\n                createdAt,\n                photoURL,\n                isSubscribed: false,\n                ...additionalData\n            });\n        } catch (err) {\n            console.log('Error creating user.', err.message);\n        }\n    }\n\n    return userRef;\n};\n\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;","import React from 'react';\nimport { auth } from '../services/Firebase';\nimport { signInWithGoogle } from '../services/Firebase';\nimport { Link } from 'react-router-dom';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport './Header.css'\n\nconst Header = ({ user }) => (\n    <nav className='flex justify-between bb b--white-10 bg-dark-gray'>\n        <div className='link white-70 hover-white no-underline flex items-center pa3'>\n            <Link to={`${process.env.PUBLIC_URL}/`}>\n                <svg className='dib h1 w1 home-icon' data-icon='grid' viewBox='0 0 32 32' style={{ fill: 'white' }}>\n                    <title>Super Normal Icon Mark</title>\n                    <path d='M2 2 L10 2 L10 10 L2 10z M12 2 L20 2 L20 10 L12 10z M22 2 L30 2 L30 10 L22 10z M2 12 L10 12 L10 20 L2 20z M12 12 L20 12 L20 20 L12 20z M22 12 L30 12 L30 20 L22 20z M2 22 L10 22 L10 30 L2 30z M12 22 L20 22 L20 30 L12 30z M22 22 L30 22 L30 30 L22 30z' />\n                </svg>\n            </Link>\n        </div>\n        <div className='flex-grow pa3 flex items-center'>\n            <div className='f6 link dib white dim mr3 mr4-ns pointer'>\n                {\n                    user ?\n                        <Link to={`${process.env.PUBLIC_URL}/`} style={{ textDecoration: 'none', color: 'white' }}>\n                            <div onClick={() => auth.signOut()}>Sign Out</div>\n                        </Link>\n                    :   <div onClick={signInWithGoogle}>Sign In</div>\n                }\n            </div>\n\n            {\n                user ? \n                    <Link to={`${process.env.PUBLIC_URL}/profile/${user ? user.id : ''}`} style={{ textDecoration: 'none', color: 'white' }}>\n                        <div className='f6 dib white bg-animate hover-bg-white hover-black no-underline pv2 ph4 br-pill ba b--white-20 pointer'>Hi, {user.displayName}</div>\n                    </Link>\n                :   <Tooltip arrow title={<span style={{ fontSize: '12px' }}>Create a Google Account</span>} aria-label='signup'>\n                        <a className='f6 dib white bg-animate hover-bg-white hover-black no-underline pv2 ph4 br-pill ba b--white-20 pointer' href='https://accounts.google.com/signup/v2/webcreateaccount?continue=https%3A%2F%2Faccounts.google.com%2FManageAccount&dsh=S470069364%3A1581635333339519&gmb=exp&biz=false&flowName=GlifWebSignIn&flowEntry=SignUp' target='_blank' rel='noopener noreferrer'>\n                            Sign Up\n                        </a>\n                    </Tooltip>\n            }\n\n        </div>\n    </nav>\n);\n\nexport default Header;\n","import React from 'react';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport { Link } from 'react-router-dom';\nimport './PostPreview.css';\n\nconst PostPreview = ({ id, title, content, author, date, handleLike, currentUser, likes }) => (\n    <article className='pv3 bb b--black-10 ph3 ph0-l'>\n        <div className='flex flex-column flex-row-ns'>\n            <div className='tl'>\n                <h1 className='f3 athelas mt0 lh-title'>\n                    {title}\n                </h1>\n                <p className='f5 f4-l lh-copy athelas'>\n                    {content}\n                </p>\n            </div>\n        </div>\n        <p className='tl f6 lh-copy gray mv2'>\n            By\n            <Link to={`${process.env.PUBLIC_URL}/profile/${author ? author.id : ''}`} style={{ textDecoration: 'none', color: 'black' }}>\n                <span className='fw7 pointer'> {author.displayName}</span>\n            </Link>\n        </p>\n        <time className='tl f6 db gray'>{date}</time>\n        <div className='tl mt3'>\n            {\n                likes[currentUser ? currentUser.id : ''] ?\n                    <FavoriteIcon className={`v-mid pointer ${likes[currentUser ? currentUser.id : ''] ? 'heart' : ''}`} style={{ color: '#ed4956' }} onClick={() => handleLike(false, id)} />\n                :   <FavoriteBorderIcon className='v-mid pointer' onClick={() => handleLike(true, id)} />\n            }\n            <span className='v-mid'>{`• ${Object.keys(likes).length} Like${Object.keys(likes).length === 1 ? '' : 's'}`}</span>\n        </div>\n    </article>\n);\n\nexport default PostPreview;\n","import React, { Component } from 'react';\nimport PostPreview from './PostPreview';\nimport { firestore } from '../services/Firebase';\n\nclass ProfilePage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { displayedUser: null, userPosts: [] };\n    }\n\n    getUser = async () => {\n        const { match } = this.props;\n        const userRef = await firestore.doc(`users/${match.params.userID}`).get();\n        const userData = userRef.data();\n        this.setState({ displayedUser: userData });\n    }\n\n    componentDidMount() {\n        this.getUser();\n\n        const { match } = this.props;\n        const postRef = firestore.collection('posts');\n        this.unsubscribeFromSnapshot = postRef.onSnapshot(snapshot => {\n            const allPosts = snapshot.docs.map(doc => doc.data());\n            const currentUserPosts = allPosts.filter(post => post.author.id === match.params.userID);\n            this.setState({ userPosts: currentUserPosts });\n        });\n    }\n\n    componentWillUnmount() {\n        this.unsubscribeFromSnapshot();\n    }\n\n    render() {\n        const { displayedUser, userPosts } = this.state;\n        const { currentUser, handleLike } = this.props;\n\n        return (\n            <div>\n                <article className='mw6 center bg-white br3 pa3 pa4-ns mv3 ba b--black-10'>\n                    <div className='tc'>\n                        <img src={displayedUser ? displayedUser.photoURL : ''} className='br-100 h4 w4 dib ba b--black-05 pa2' alt='profile pic' />\n                        <h1 className='f3 mb2'>\n                            {displayedUser ? displayedUser.displayName : ''}\n                        </h1>\n                        <h2 className='f5 fw4 gray mt0'>\n                            Contact:\n                            <a style={{ textDecoration: 'none', color: '#777' }} href={`mailto:${displayedUser ? displayedUser.email : ''}`} target='_blank' rel='noopener noreferrer'>\n                                <span className='fw7'> {displayedUser ? displayedUser.email : ''}</span>\n                            </a>\n                        </h2>\n                    </div>\n                </article>\n                <section className='mw7 center'>\n                    <h1 className='athelas ph3 ph0-l'>{`${displayedUser ? displayedUser.displayName : ''}'s Posts`}</h1>\n                    {\n                        userPosts.length ?\n                            userPosts.map(post => (<PostPreview {...post} currentUser={currentUser} handleLike={handleLike} />))\n                        :   <h3 className='fw4'>No posts yet!</h3>\n                    }\n                </section>\n            </div>\n        );\n    }\n}\n\nexport default ProfilePage;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { Link } from 'react-router-dom';\n\n\nconst CreatePost = ({ handleChange, handleSubmit, handleReset, titleField, contentField, currentUser }) => (\n    <div>\n        <h1>Create a New Post</h1>\n        <form onSubmit={e => { e.preventDefault() }}>\n            <div className='db mt4'>\n                <TextField\n                    id=\"title\"\n                    label=\"Enter a Title\"\n                    onChange={handleChange}\n                    type=\"title\"\n                    name=\"titleField\"\n                    value={titleField}\n                    style={{\n                        margin: 10,\n                        minWidth: '50%'\n                    }}\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                />\n            </div>\n            <div className='db'>\n                <TextField\n                    id=\"content\"\n                    label=\"What's on your mind?\"\n                    onChange={handleChange}\n                    type=\"content\"\n                    name=\"contentField\"\n                    value={contentField}\n                    style={{\n                        margin: 10,\n                        minWidth: '50%'\n                    }}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    multiline\n                />\n            </div>\n\n            <div className='pa3 dib'>\n                <Link to={`${process.env.PUBLIC_URL}/`} style={{ textDecoration: 'none' }}>\n                    <Button variant='contained' type='reset' onClick={handleReset}>\n                        Cancel\n                    </Button>\n                </Link>\n            </div>\n            <div className='pa3 dib'>\n                <Button variant='contained' type='reset' onClick={handleReset} color='secondary'>\n                    Clear\n                </Button>\n            </div>\n            <div className='pa3 dib'>\n                {\n                    currentUser ?\n                        <Link to={`${process.env.PUBLIC_URL}/${titleField.trim() && contentField.trim() ? '' : 'newpost'}`} style={{ textDecoration: 'none' }}>\n                            <Button variant='contained' type='submit' onClick={handleSubmit} color='primary'>\n                                Post\n                            </Button>\n                        </Link>\n                    :   <Button variant='contained' type='submit' onClick={handleSubmit} color='primary' disabled>\n                        Post\n                        </Button>\n                }\n            </div>\n        </form>\n    </div>\n);\n\nexport default CreatePost;","import React, { Component } from 'react';\nimport './App.css';\n\nimport Header from './components/Header';\nimport ProfilePage from './components/ProfilePage';\nimport CreatePost from './components/CreatePost';\nimport PostPreview from './components/PostPreview';\n\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport AddIcon from '@material-ui/icons/Add';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport NotificationsOffIcon from '@material-ui/icons/NotificationsOff';\nimport Button from '@material-ui/core/Button';\n\nimport { auth, createNewUser } from './services/Firebase';\nimport { firestore } from './services/Firebase';\nimport uuidv1 from 'uuid/v1';\nimport { Switch, Route, Link } from 'react-router-dom';\n\nclass App extends Component {\n\n    unsubscribeFromAuth = null;\n    unsubscribeFromSnapshot = null;\n\n    initialState = {\n        currentUser: null,\n        titleField: '',\n        contentField: '',\n        posts: [],\n        currentPage: 1\n    }\n\n\n\n    constructor(props) {\n        super(props);\n        this.state = this.initialState;\n    }\n\n    handleChange = event => {\n        const { name, value } = event.target;\n        this.setState({ [name]: value })\n    };\n\n    handleSubmit = () => {\n        const { titleField, contentField, currentUser, posts } = this.state;\n\n        if (!titleField.trim() || !contentField.trim()) {\n            alert('Title or content cannot be empty!');\n        } else {\n\n            const postID = 999999999 - posts.length;\n            const newPost = {\n                id: postID,\n                key: uuidv1(),\n                title: titleField,\n                content: contentField,\n                author: currentUser,\n                date: new Date().toString().split(':').slice(0, 2).toString().replace(',', ':'),\n                likes: {}\n            };\n    \n            this.handleReset();\n\n            firestore.doc(`posts/${postID}`).set(newPost);\n        }\n    }\n\n    handleReset = () => {\n        this.setState({\n            titleField: '',\n            contentField: ''\n        });\n    }\n\n    handlePageForward = () => {\n        this.setState(state => ({\n            currentPage: state.currentPage + 1\n        }));\n    }\n\n    handlePageBackward = () => {\n        this.setState(state => ({\n            currentPage: state.currentPage - 1\n        }));\n    }\n\n    handleSubscription = async sub => {\n        const userRef = firestore.doc(`users/${this.state.currentUser.id}`);\n        const userObj = await userRef.get();\n        const userData = userObj.data();\n\n        try {\n            await userRef.set({ ...userData, isSubscribed: sub });\n        } catch (err) {\n            console.log('Error handling subscription.', err.message);\n        }\n    }\n\n    handleLike = async (like, postID) => {\n        const { currentUser } = this.state;\n\n        if (!currentUser) {\n            alert('Please sign in to like this post.');\n            return;\n        }\n\n        const postRef = firestore.doc(`posts/${postID}`);\n        const postSnapshot = await postRef.get();\n        const postData = postSnapshot.data();\n\n        try {\n            if (like) {\n                const updatedUserLikes = { ...postData.likes, [currentUser.id]: like };\n                await postRef.set({ ...postData, likes: updatedUserLikes });\n            } else {\n                delete postData.likes[currentUser.id];\n                await postRef.set({ ...postData, likes: postData.likes });\n            }\n        } catch (err) {\n            console.log('Error handling like.', err.message);\n        }\n    }\n\n\n    componentDidMount() {\n        this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n            if (userAuth) {\n                const userRef = await createNewUser(userAuth);\n\n                userRef.onSnapshot(snapshot => {\n                    this.setState({ currentUser: {\n                        id: snapshot.id,\n                        ...snapshot.data()\n                    }});\n                })\n            } else {\n                this.setState({ currentUser: null });\n            }\n        });\n\n        const postRef = firestore.collection('posts');\n        this.unsubscribeFromSnapshot = postRef.onSnapshot(snapshot => {\n            const allPosts = snapshot.docs.map(doc => doc.data());\n            this.setState({ posts: allPosts });\n\n            if (this.state.currentPage > 1 && this.state.currentPage > Math.ceil(allPosts.length / 5)) {\n                this.setState({ currentPage: Math.ceil(allPosts.length / 5) });\n            }\n        });\n    }\n\n    componentWillUnmount() {\n        this.unsubscribeFromAuth();\n        this.unsubscribeFromSnapshot();\n    }\n\n\n    render() {\n        const { currentUser, posts, currentPage } = this.state;\n\n        return (\n            <div className='App'>\n                <Header user={currentUser} />\n                <Switch>\n                    <Route exact path={`${process.env.PUBLIC_URL}/`}>\n                        <section className='mw7 center'>\n                            <h1 className='athelas ph3 ph0-l'>News Feed</h1>\n                            \n                            {\n                                currentUser ?\n                                    <div>\n                                        <div className='mh3 dib'>\n                                            <Link to={`${process.env.PUBLIC_URL}/newpost`} style={{ textDecoration: 'none' }}>\n                                                <Button variant='contained' style={{ backgroundColor: '#1777f2', color: 'white' }}><AddIcon /><span>New Post</span></Button>\n                                            </Link>\n                                        </div>\n                                        {\n                                            currentUser.isSubscribed ? \n                                                <div className='mh3 dib'>\n                                                    <Button variant='contained' onClick={() => this.handleSubscription(false)}><NotificationsOffIcon /><span>Unsubscribe</span></Button>\n                                                </div>\n                                            :   <div className='mh3 dib'>\n                                                    <Button variant='contained' onClick={() => this.handleSubscription(true)} style={{ backgroundColor: '#f90300', color: 'white' }}><NotificationsActiveIcon /><span>Subscribe</span></Button>\n                                                </div>\n                                        }\n                                    </div>\n                                :   null\n                            }\n\n                            {\n                                posts.length ?\n                                    <div>\n                                        {posts.slice((currentPage - 1) * 5, currentPage * 5).map(post => (<PostPreview {...post} currentUser={currentUser} handleLike={this.handleLike} />))}\n                                        <div className='ma4'>\n                                            <Button onClick={this.handlePageBackward} variant='contained' disabled={currentPage === 1}><ArrowBackIcon /></Button>\n                                                <span className='mh3'>{`Page ${currentPage} of ${Math.ceil(posts.length / 5)}`}</span>\n                                            <Button onClick={this.handlePageForward} variant='contained' disabled={currentPage === Math.ceil(posts.length / 5)}><ArrowForwardIcon /></Button>\n                                        </div>\n                                        <div className='ma3'>\n                                            <Link to={`${process.env.PUBLIC_URL}/all`} style={{ textDecoration: 'none' }}>\n                                                <Button style={{ textTransform: 'none' }} variant='outlined'>View All Posts</Button>\n                                            </Link>\n                                        </div>\n                                    </div>\n                                :   <h3 className='fw4'>No posts yet!</h3>\n                            }\n                        </section>\n                    </Route>\n\n                    <Route path={`${process.env.PUBLIC_URL}/newpost`}>\n                        <CreatePost handleChange={this.handleChange} handleSubmit={this.handleSubmit} handleReset={this.handleReset} {...this.state} />\n                    </Route>\n\n                    <Route path={`${process.env.PUBLIC_URL}/all`}>\n                        <section className='mw7 center'>\n                            <h1 className='athelas ph3 ph0-l'>All Posts</h1>\n                            {\n                                posts.length ?\n                                    <div>\n                                        {posts.map(post => (<PostPreview {...post} currentUser={currentUser} handleLike={this.handleLike} />))}\n                                        <div className='ma3'>\n                                            <Link to={`${process.env.PUBLIC_URL}/`} style={{ textDecoration: 'none' }}>\n                                                <Button style={{ textTransform: 'none' }} variant='outlined'>Back to News Feed</Button>\n                                            </Link>\n                                        </div>\n                                    </div>\n                                :   <h3 className='fw4'>No posts yet!</h3>\n                            }\n                        </section>\n                    </Route>\n\n                    <Route path={`${process.env.PUBLIC_URL}/profile/:userID`} render={props => <ProfilePage {...props} currentUser={currentUser} handleLike={this.handleLike} />} />\n                </Switch>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter } from 'react-router-dom';\nimport Particles from 'react-particles-js';\nimport particlesOptions from './particlesOptions.json';\nimport 'tachyons';\n\nReactDOM.render(\n    <BrowserRouter>\n        <Particles style={{ position: 'fixed', zIndex: -1 }} className='particles' params={particlesOptions} />\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}